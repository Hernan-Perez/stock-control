/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controlstock;

import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author hernan
 */


public class DetalleProducto extends javax.swing.JFrame
{
    private final JFrame parent;
    private final Producto producto;
    private final List<Producto> listaProductos;
    private final boolean modificable;
    
    public DetalleProducto(JFrame parent, Producto producto, List<Producto> listaProductos, boolean modificable)
    {
        initComponents();
        setLocationRelativeTo(null); //UNA VEZ ME TIRO ERROR CON ESTO AL INICIAR ESTA VENTANA
        
        this.parent = parent;
        this.producto = producto;
        this.modificable = modificable;
        this.listaProductos = listaProductos;
        
        volverButton.requestFocus();
        
        nombreTextField.setText(producto.getNombre());
        descripcionTextField.setText(producto.getDescripcion());
        stockMinimoTextField.setText(String.valueOf(producto.getValorStockMin()));
        stockActualTextField.setText(String.valueOf(producto.getStock()));
        codigoTextField.setText(String.valueOf(producto.getCod()));
        
        if (!modificable)
        {
            guardarCambiosButton.setVisible(false);
            eliminarButton.setVisible(false);
            
            //editable = false
            nombreTextField.setEditable(false);
            descripcionTextField.setEditable(false);
            stockActualTextField.setEditable(false);
            stockMinimoTextField.setEditable(false);
            //focusable = false
            nombreTextField.setFocusable(false);
            descripcionTextField.setFocusable(false);
            stockActualTextField.setFocusable(false);
            stockMinimoTextField.setFocusable(false);
            //enabled = false
            /*nombreTextField.setEnabled(false);
            descripcionTextField.setEnabled(false);
            stockActualTextField.setEnabled(false);
            stockMinimoTextField.setEnabled(false);*/
        }
        else
        {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        nombreTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        descripcionTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        stockActualTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        stockMinimoTextField = new javax.swing.JTextField();
        volverButton = new javax.swing.JButton();
        guardarCambiosButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        codigoTextField = new javax.swing.JTextField();
        eliminarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Detalle De Producto");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Nombre:");

        nombreTextField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                nombreTextFieldKeyReleased(evt);
            }
        });

        jLabel2.setText("Descripción:");

        descripcionTextField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                descripcionTextFieldKeyReleased(evt);
            }
        });

        jLabel3.setText("Stock actual:");

        stockActualTextField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                stockActualTextFieldFocusLost(evt);
            }
        });
        stockActualTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                stockActualTextFieldActionPerformed(evt);
            }
        });
        stockActualTextField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                stockActualTextFieldKeyReleased(evt);
            }
        });

        jLabel4.setText("Stock mínimo:");

        stockMinimoTextField.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                stockMinimoTextFieldFocusLost(evt);
            }
        });
        stockMinimoTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                stockMinimoTextFieldActionPerformed(evt);
            }
        });
        stockMinimoTextField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                stockMinimoTextFieldKeyReleased(evt);
            }
        });

        volverButton.setText("Volver");
        volverButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                volverButtonActionPerformed(evt);
            }
        });

        guardarCambiosButton.setBackground(new java.awt.Color(0, 153, 0));
        guardarCambiosButton.setText("Guardar cambios");
        guardarCambiosButton.setEnabled(false);
        guardarCambiosButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                guardarCambiosButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Código:");

        codigoTextField.setEnabled(false);
        codigoTextField.setFocusable(false);
        codigoTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                codigoTextFieldActionPerformed(evt);
            }
        });

        eliminarButton.setBackground(new java.awt.Color(255, 0, 0));
        eliminarButton.setText("Eliminar");
        eliminarButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                eliminarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(guardarCambiosButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(descripcionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stockActualTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stockMinimoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(32, 32, 32)
                        .addComponent(codigoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eliminarButton)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(16, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(codigoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(descripcionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(stockActualTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockMinimoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(volverButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guardarCambiosButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stockActualTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_stockActualTextFieldActionPerformed
    {//GEN-HEADEREND:event_stockActualTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockActualTextFieldActionPerformed

    private void stockMinimoTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_stockMinimoTextFieldActionPerformed
    {//GEN-HEADEREND:event_stockMinimoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockMinimoTextFieldActionPerformed

    private void volverButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_volverButtonActionPerformed
    {//GEN-HEADEREND:event_volverButtonActionPerformed
        // TODO add your handling code here:
        Volver();
    }//GEN-LAST:event_volverButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        // TODO add your handling code here:
        Volver();
    }//GEN-LAST:event_formWindowClosing

    private void guardarCambiosButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_guardarCambiosButtonActionPerformed
    {//GEN-HEADEREND:event_guardarCambiosButtonActionPerformed
        //validaciones
        if (stockActualTextField.getText().equals(""))
        {
            stockActualTextField.setText("0");
        }
        else
        {
            try 
            {
                int a = Integer.parseInt(stockActualTextField.getText());
                if (a < 0)
                {
                    throw new NumberFormatException();
                }
            }
            catch (NumberFormatException e) 
            {
                 JOptionPane.showMessageDialog(this, "Error: El numero ingresado en STOCK ACTUAL no es valido.", "Error", JOptionPane.ERROR_MESSAGE);
                 return;
            }
        }
        
        if (stockMinimoTextField.getText().equals(""))
        {
            stockMinimoTextField.setText("0");
        }
        else
        {
            try 
            {
                int a = Integer.parseInt(stockMinimoTextField.getText());
                
                if (a < 0)
                {
                    throw new NumberFormatException();
                }
            }
            catch (NumberFormatException e) 
            {
                 JOptionPane.showMessageDialog(this, "Error: El numero ingresado en STOCK MINIMO no es valido.", "Error", JOptionPane.ERROR_MESSAGE);
                 return;
            }
        }
        
        nombreTextField.setText(nombreTextField.getText().toUpperCase());
        descripcionTextField.setText(descripcionTextField.getText().toUpperCase());
        
        if (nombreTextField.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Error: Ingrese un nombre valido para el producto.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        else if (!nombreTextField.getText().equals(producto.getNombre()))
        {
            Producto aux;
            for (int i = 0; i < listaProductos.size(); i++)
            {
                aux = listaProductos.get(i);
                if (producto.getCod() != aux.getCod())
                {
                    if (nombreTextField.getText().equals(aux.getNombre()))
                    {
                        JOptionPane.showMessageDialog(this, "Error: Ya existe un producto (cod: " + aux.getCod() + ") con el mismo nombre.", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
            }
        }
        
        //System.out.println("OK");
        producto.setData(nombreTextField.getText(), descripcionTextField.getText(), Integer.parseInt(stockMinimoTextField.getText()));
        producto.setStock(Integer.parseInt(stockActualTextField.getText()));
        
        Volver();
    }//GEN-LAST:event_guardarCambiosButtonActionPerformed

    private void codigoTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_codigoTextFieldActionPerformed
    {//GEN-HEADEREND:event_codigoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoTextFieldActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_eliminarButtonActionPerformed
    {//GEN-HEADEREND:event_eliminarButtonActionPerformed
        // TODO add your handling code here:
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Esta seguro que desea eliminar el producto seleccionado? (esta opción no se puede deshacer)", "Eliminar", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        if (showConfirmDialog == JOptionPane.YES_OPTION)
        {
            for (int i = 0; i < listaProductos.size(); i++)
            {
                Producto aux = listaProductos.get(i);
                if (producto.getCod() == aux.getCod())
                {
                    listaProductos.remove(i);
                    break;
                }
            }
            Volver();
        }
    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void stockActualTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_stockActualTextFieldFocusLost
    {//GEN-HEADEREND:event_stockActualTextFieldFocusLost
        // TODO add your handling code here:
        if (stockActualTextField.getText().equals(""))
        {
            stockActualTextField.setText("0");
        }
        
    }//GEN-LAST:event_stockActualTextFieldFocusLost

    private void stockMinimoTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_stockMinimoTextFieldFocusLost
    {//GEN-HEADEREND:event_stockMinimoTextFieldFocusLost
        // TODO add your handling code here:
        if (stockMinimoTextField.getText().equals(""))
        {
            stockMinimoTextField.setText("0");
        }
    }//GEN-LAST:event_stockMinimoTextFieldFocusLost

    private void nombreTextFieldKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_nombreTextFieldKeyReleased
    {//GEN-HEADEREND:event_nombreTextFieldKeyReleased
        // TODO add your handling code here:
        nombreTextField.setText(nombreTextField.getText().toUpperCase());
        ActivarGuardarCambiosButton();
        
    }//GEN-LAST:event_nombreTextFieldKeyReleased

    private void descripcionTextFieldKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_descripcionTextFieldKeyReleased
    {//GEN-HEADEREND:event_descripcionTextFieldKeyReleased
        // TODO add your handling code here:
        descripcionTextField.setText(descripcionTextField.getText().toUpperCase());
        ActivarGuardarCambiosButton();
    }//GEN-LAST:event_descripcionTextFieldKeyReleased

    private void stockActualTextFieldKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_stockActualTextFieldKeyReleased
    {//GEN-HEADEREND:event_stockActualTextFieldKeyReleased
        // TODO add your handling code here:
        ActivarGuardarCambiosButton();
    }//GEN-LAST:event_stockActualTextFieldKeyReleased

    private void stockMinimoTextFieldKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_stockMinimoTextFieldKeyReleased
    {//GEN-HEADEREND:event_stockMinimoTextFieldKeyReleased
        // TODO add your handling code here:
        ActivarGuardarCambiosButton();
    }//GEN-LAST:event_stockMinimoTextFieldKeyReleased

    private void ActivarGuardarCambiosButton()
    {
        if (!guardarCambiosButton.isEnabled() && modificable)
        {
            guardarCambiosButton.setEnabled(true);
        }
    }
    
    private void Volver()
    {
        this.setEnabled(false);
        this.setVisible(false);
        parent.setEnabled(true);
        parent.setFocusable(true);
        parent.setVisible(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(DetalleProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(DetalleProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(DetalleProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(DetalleProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new DetalleProducto(null, null, null, false).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField codigoTextField;
    private javax.swing.JTextField descripcionTextField;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JButton guardarCambiosButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField nombreTextField;
    private javax.swing.JTextField stockActualTextField;
    private javax.swing.JTextField stockMinimoTextField;
    private javax.swing.JButton volverButton;
    // End of variables declaration//GEN-END:variables
}
